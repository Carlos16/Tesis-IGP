Plot
mc
krc
mr[1]
mc[1]
Plot
Plot
Plot
Plot
Plot
k0
k0= c(c(2,3),c(4,5))
k0
seq(1:n)
D
n2
D
seq(1:n2)
seq(1:2*n2)
D
D
rep(2,3)
phi
phi
phi
as.numeric(phi)
c(D,phi)
length(k0)
k0
k0
class(k0)
hi
phi
D
k0
k0
length(krc)
18*n
length(krcBase)
length(krc)
length(D)
length(D)
length(krc)
D
k0
D
k0
D
length(D)
?ifelse
(pd0,pd1)=c(2,3)
c(pd0,pd1)=c(2,3)
pd0,pd1=c(2,3)
pd0=2
pd1=1
pd0,pd1=c(2,3)
c(pd0,pd1)=c(2,3)
(pd0,pdf1)=c(2,3)
pd0:pd1 = c(2,3)
b,c <- c(2,3)
length(mc)
length(k0)
length(D)
length(phi)
length(krc)
k0
length(krcBase)
700*18
701*18
length(D)
D
Plot
head(M)
M
head(M)
phi
length(phi)
phi
length(D)
D
length(k0)
k0
phi
k0
phi
k0
k0
phi
head(M)
phi
constructParamDataSet <-function(Basek0, Basephi, krcLims, n, fm, e){
    # Levels for k0, D
    # half of the elements for k0 correspond to D =2 and the other to D = 3

    n2 = length(BaseK0)
    D <- sapply(seq(1:n2), assignD, n2)
    ## Levels for phi
    n3 = length(phibase)

    phi <- as.vector(rep(phibase,n2))
    D <- as.vector(sapply(D,rep,n3))
    k0 <- as.vector(sapply(k0,rep,n3))

    ## Base Levels for krc
    range <- krcLims[2]-krcLims[1]
    krcBase <- 10**seq(krcLims[1],krcLims[2],range/n)

    krc <- as.vector(rep(krcBase,n2*n3))
    D <- as.vector(sapply(D,rep,n+1))
    k0 <- as.vector(sapply(k0,rep,n+1))
    phi <- as.vector(sapply(phi,rep,n+1))

    mc <-  InvasibilityRC(krc,D,k0,e,f,fm,phi)
    mr <- mc * krc

    M <- data.frame(MassC =  mc , MassR =  mr , krc = krc, Prod = factor(k0), phi = factor(phi), Dim = factor(D))
    return(M)
}
p <- c(c("2","3"),c("2","4"))
p
NecInvPCR
length(params$D)
12658*700
N <- NecInvPCR(params$krc, params$kcp, params$D, params$k0, e1, e2, e3, f, params$fc, params$phi)
NecInvPCR
N <- NecInvPCR(params$krc, params$kcp, params$D, params$k0, e1, e2, e3, f, params$fc, params$phi)
N[1]
N[2]
N[3]
N[4]
N[1] - N[2]
Params$D[1]
params$D[1]
params$D[2]
N[200]
head(M)
p
head(M)
p
p + stat_contour(breaks = c(0))
p + geom_contour(bins = 2)
p
p
tail(M)
P
p
p
p
p
p
p + geom_tile(fill = N)
M$N[1:20
]
M$N = ifelse(M$N > 0 , 1, 0)
M$N[1:20]
M$N <- as.factor(M$N)
colors
colors
M$N <- as.numeric(M$N)*0.1
M$N[0:10
]
sum(M$N==0]
sum(M$N==0)
sum(N<0)
M$N = as.numeric(N<0)
sum(M$N == 0)
M$N[1]
sum(M$N == 1)
M$N = as.numeric(N > 0)
sum(M$N == 0)
M$N = as.numeric(N > 0) * 0.1
sum(M$N == 0)
N[1]
M$N = N
p
p
p
rep(c("chi[3] + chi[4] - q[0] > 0"),6)
x <- rep(c("chi[3] + chi[4] - q[0] > 0"),6)
x
x[2]
factor(c(2,2,2,3,3,3), levels = c("2D","3D"))
factor(c(2,2,2,3,3,3))
p + geom_text(data = ann_text , label =  lab)
p + geom_text(data = ann_text , aes(label = lab))
p + geom_text(data = ann_text , label =  lab)
ann_text
p + geom_text(data = ann_text , aes(label = lab))
p
p + geom_text(data = ann_text , aes(x = log10(krc), y = log10(kcp) , label = lab))
ann_text
Dim <- t
Dim_t
p + geom_text(data = ann_text , aes(x = log10(krc), y = log10(kcp) , label = lab))
ann_text
p + geom_text(data = ann_text , aes(label = lab))
label
p + geom_text(data = ann_text , aes(label = lab))
head(M)
length(ann_text$lab)
p + geom_text(data = ann_text , label = "Text")
ann_text
head(M)
p + geom_text(data = ann_text , label = "Text")
ann_text
p + geom_text(data = ann_text )
p + geom_text(data = ann_text, aes(label = lab ))
p + geom_text(data = ann_text , label = "Text")
p + geom_text(data = ann_text , aes(label = lab), parse = TRUE)
p + geom_text(data = ann_text , aes(label = lab), parse = TRUE)
p + geom_text(data = ann_text , aes(label = lab), parse = TRUE)
p + geom_text(data = ann_text , aes(label = lab), parse = TRUE)
q
}
q,b <- c(2,3)
getForagingModes(1)
getForagingModes(2)
getForagingModes(3)
c(q,b) <- c(2,3)
q b <-  c(2,3)
c <-  c(1)
length(c)
N[1:200]
sum(N)
sum(N, na.rm =TRUE)
length(N[!is.na(N)])
N[!is.na(N)]
length(N[is.na(N)])
e1
e2
e3
N[500]
N[N >0]
N[N > 0]
N[is.na(N)]
N[is.na(N), ]
head(M)
N2[0]
N2[1]
N[1]
N
chi34gamma1(1e-5,1e-5, 2, a02D, 0.2, e1, e2, e3, f, "Ac", "Ac", "Ac", 0.1, 0.5, 0.2)
chi34gamma1(1e-5,1e-5, 2, a02D, 0.2, e1, e2, e3, f, "Ac", "Ac", "Ac", 0.1, 0.5, 0.2)
chi34gamma1(1e-5,1e-5, 2, a02D, 0.2, e1, e2, e3, f, "Ac", "Ac", "Ac", 0.1, 0.5, 0.2)
chi34gamma1(1e-5,1e-5, 2, a02D, 0.2, e1, e2, e3, f, "Ac", "Ac", "Ac", 0.1, 0.5, 0.2)
w
P <- chi34gamma1(1e-5,1e-5, 2, a02D, 0.2, e1, e2, e3, f, "Ac", "Ac", "Ac", 0.1, 0.5, 0.2)
P[1]
P[2]
f
a02D
length(P)
e1
e2
e3
P <- chi34gamma1(1e-5,1e-5, 2, a02D, 0.2, e1, e2, e3, f, "Ac", "Ac", "Ac", 0.1, 0.5)
-1*0.2
w <-  0.2
-w
P <- chi34gamma1(1e-5,1e-5, 2, a02D, 0.2, e1, e2, e3, f, "Ac", "Ac", "Ac", 0.1, 0.5,0.2)
P[1]
P[]2
P[2]
a02D
0.2
1e-5
1e-5
P <- chi34gamma1(1e-5,1e-5, 2, a02D, 0.2, e1, e2, e3, f, "Ac", "Ac", "Ac", 0.1, 0.5,0.2)
N[1]
N[2]
N2[2]
N[2]
N[1]
N[1]
N[2]
N
N
N[1]
N[100]
N[200]
params$krc[1:10
]
params$kcp[1:10
]
head(M)
p
warnings()
krc[1]
krc[2]
krc[500]
krc[600[
]
[
q
q
head(M)
tail(M)
class(M$N)
install.packages("akima")
log10(krc)
length(M$N)
length(M$kcp) * length(M$krc)
length(M$kcp)
?melt
??melt
head(M)
M = M[complete.cases(M),]
length(M)
M[1]
head(M)
nrow(M)
p
log10(N)
length(krc)
p
p
M <- c(1,2,3)
M[2:]
M[2:3]
M[2:length(M)]
seq(1,10,10)[2:10]
seq(1,10,1)[2:10]
krc
M1 = M[M$Dim = 3D & M$phi = 2.0,]
M1 = M[M$Dim == 3D & M$phi == 2.0,]
M1 = M[M$Dim == "3D" & M$phi == 2.0,]
head(M1)
min(M1$N)
min(M1$N, na.rm = T)
breaks <- c(-10,-2.5,2.5,5,10)
lengths <- c(100,500,100,100)
d <- createSequence(breaks, lengths)
d[0]
d[1]
d[2]
d[3]
length(d)
d[801]
d[101]
d[601]
N[1]
N[2]
N[3]
krc[0]
krc[1]
head(M)
p
1600*1600
1400*1400
opts?
?
q
?opts
??opts
?scale_fill_gradient
)
p
p
m = 5
head(M$Cond)
head(M)
m5[0]
m5[1]
m5[2]
length(m5)
length(m5)
head(M)
getZone(1e5, 0.5, 0.2, FALSE)
getZone(1e5, c(0.5,0.2), c(0.2,0.5), c(FALSE,TRUE))
head(m5)
length(is.na(m5))
sum(m5)
sum(m5, na.rm = T)
p
head(M)
p
head(M)
head(M)
p
N3[N3 > 0] = 1
sum(N3)
sum(N2)
sum(N2, na.rm = TRUE)
ifelse(c(D==2,D==2),c(0.1,0.2),c(0.1,0.2))
D <-  ifelse(c(D==2,D==2),c(0.1,0.2),c(0.1,0.2))
D
D == 2
D = 2
Dim <-  ifelse(c(D==2,D==2),c(0.1,0.2),c(0.1,0.2))
Dim
D = 3
Dim <-  ifelse(c(D==2,D==2),c(0.1,0.2),c(0.1,0.2))
D = 3
Dim
Dim <-  ifelse(c(D==2,D==2),c(0.1,0.1),c(0.2,0.2))
Dim
D
D = 3
k0 = 30
fc = 1
phi = 2
InvCPR(1e-5,1e-5,D,k0,e1,e2,e3,f,fc,phi)
NecInvCPR(1e-5,1e-5,D,k0,e1,e2,e3,f,fc,phi)
InvCPR(1e-5,1e-5,D,k0,e1,e2,e3,f,fc,phi)
NecInvCPR(1e-5,1e-5,D,k0,e1,e2,e3,f,fc,phi)
NecInvCPR(1e-5,1e-10,D,k0,e1,e2,e3,f,fc,phi)
InvCPR(1e-5,1e-10,D,k0,e1,e2,e3,f,fc,phi)
head(M)
sum(N3)
sum(N2, na.rm = T)
sum(N3[ N3 > 0])
N3[1]
N3[N3 > 0 ] [ 0:1]
N3[N3 > 0 ] [ 1:2]
N3 = N3[N3 > 0]
head(N3)
head(N2)
N3[1] > 0
N3[1]
head(N3  > 0 )
N4 <-  sapply(N3 , function x  x > 0)
N4 <-  sapply(N3 , function(x) x > 0)
N4[1]
N4[2]
sum(N4)
length(N3)
sum(N2)
sum(N2, na.rm = T)
 head(N4)
 N3[N3 > 0 ] = 1
N3[ N3 <= 0 ] = NA
sum(N3)
sum(N3, na.rm =T)
N3[ N3 <=0 ] <- 0
N2[ is.na(N2)] <- 0
M$N2 = N2
M$N3 = N3
head(M)
M$N3[is.na(N3)] = 0
head(M)
MM <- M[!(M$N2 - M$N3 == 0),]
head(MM)
MM[1:100,]
InvCPR(M$krc[272956],M$kcp[272956], M$D[272956], M$k0[272956], e1 ,e2 ,e3 , f, 1, 0.015)
InvCPR(M$krc[272956],M$kcp[272956], 3,M$k0[272956], e1 ,e2 ,e3 , f, 1, 0.015)
NecInvCPR(M$krc[272956],M$kcp[272956], 3,M$k0[272956], e1 ,e2 ,e3 , f, 1, 0.015)
head(M)
head(MM)
NecInvCPR(1e-10, 541169.5, 3, 30, e1 ,e2 ,e3 , f, 1, 0.015)
InvCPR(1e-10, 541169.5, 3, 30, e1 ,e2 ,e3 , f, 1, 0.015)
272040
InvCPR(1e-10, 541169.5, 3, 30, e1 ,e2 ,e3 , f, 1, 0.015)
N2[272040]
params$krc[272040]
params$kcp[272040]
InvCPR(params$krc[272040], params$kcp[272040], params$D[272040], params$k0[272040], e1, e2, e3, f,params$fc[272040], params$phi[272040])
InvCPR(params$krc[1:2], params$kcp[1:2], params$D[1:2], params$k0[1:2], e1, e2, e3, f,params$fc[1:2], params$phi[1:2])
InvCPR(params$krc[272040:272041], params$kcp[272040:272041], c(3D,3D), c(30,30), e1, e2, e3, f,params$fc[1:2], c(0.015,0.015))
InvCPR(params$krc[272040,272041], params$kcp[272040,272041], c(3D,3D), c(30,30), e1, e2, e3, f,params$fc[1:2], c(0.015,0.015))
InvCPR(params$krc[c(272040,272041)],params$kcp[c(272040,272041)], c(3D,3D), c(30,30), e1, e2, e3, f,params$fc[1:2], c(0.015,0.015))
InvCPR(params$krc[272040,272041], params$kcp[272040,272041], c(3,3), c(30,30), e1, e2, e3, f,params$fc[1:2], c(0.015,0.015))
InvCPR(params$krc[272040:272041], params$kcp[272040:272041], c(3,3), c(30,30), e1, e2, e3, f,params$fc[1:2], c(0.015,0.015))
InvCPR(params$krc[272039:272041], params$kcp[272039:272041],params$D[272039:272041],params$k0[272039:272041] , e1, e2, e3, f,params$fc[272039:272041], params$phi[272039:272041])
N2[272039]
N2[272039:272041]
length(N2)
sum(N2, na.rm = T)
T <-  read.csv("Especie_atributo_igarape.csv", header = T)
sum(N2)
sum(N3)
N2[1]
N1[1]
N3[1]
N4 <-  N3[!(N3 == N2)]
head(N4)
N2[272049]
N3[272049]
n = 272049
InvCPR(params$krc[n], params$kcp[n], params$D[n], params$k0[n], e1, e2, e3, f, params$fc[n], params$phi[n])
N2[272049]
N2[272049]
InvCPR(params$krc[n], params$kcp[n], params$D[n], params$k0[n], e1, e2, e3, f, params$fc[n], params$phi[n])
N2[272050]
N2[272048]
InvCPR(params$krc[n], params$kcp[n], params$D[n], params$k0[n], e1, e2, e3, f, params$fc[n], params$phi[n])
N2[272048]
N2[272050]
head(N3)
head(N3)
sum(log10(N3))
head(M$N)
p
p
p
p
install.packags("deSolve")
install.packages("deSolve")
Data <- read.csv("BenguellaIGPS.csv")
